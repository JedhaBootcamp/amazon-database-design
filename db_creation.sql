-- CUSTOMER TABLE
CREATE TABLE CUSTOMER (
    C_ID   VARCHAR(40),
    FNAME  VARCHAR(200) NOT NULL,
    LNAME  VARCHAR(30) NOT NULL,
    PHONE  CHAR(10) UNIQUE NOT NULL,
    EMAIL  VARCHAR(250) UNIQUE NOT NULL,
    PWD    VARCHAR(60) NOT NULL,
    PRIMARY KEY (C_ID)
);

-- SHIPPING_DETAILS TABLE
CREATE TABLE SHIPPING_DETAILS (
    ADDRESS_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    STREET_ADDRESS VARCHAR(100) NOT NULL,
    CITY VARCHAR(100) NOT NULL,
    STATE VARCHAR(100) NOT NULL,
    ZIP VARCHAR(10) NOT NULL,
    COUNTRY VARCHAR(60) NOT NULL,
    PHONE CHAR(10) NOT NULL,
    PRIMARY KEY (ADDRESS_ID)
);

-- CUSTOMER_SHIPPING TABLE
CREATE TABLE CUSTOMER_SHIPPING (
    ADDRESS_ID INTEGER,
    C_ID VARCHAR(40),
    IS_DEFAULT CHAR(1) DEFAULT '0' CHECK (IS_DEFAULT IN ('0', '1')),
    PRIMARY KEY (ADDRESS_ID, C_ID),
    CONSTRAINT CSADDRESSFK FOREIGN KEY (ADDRESS_ID) REFERENCES SHIPPING_DETAILS (ADDRESS_ID) ON DELETE CASCADE,
    CONSTRAINT CSCUSTOMERFK FOREIGN KEY (C_ID) REFERENCES CUSTOMER (C_ID) ON DELETE CASCADE
);

-- PAYMENT_DETAILS TABLE
CREATE TABLE PAYMENT_DETAILS (
    PAYMENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    CARD_NO BIGINT NOT NULL,
    CVV SMALLINT NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    BILLING_ADDRESS VARCHAR(500) NOT NULL,
    PRIMARY KEY (PAYMENT_ID)
);

-- CUSTOMER_PAYMENT TABLE
CREATE TABLE CUSTOMER_PAYMENT (
    PAYMENT_ID INTEGER,
    C_ID VARCHAR(40),
    IS_DEFAULT CHAR(1) DEFAULT '0' CHECK (IS_DEFAULT IN ('0', '1')),
    PRIMARY KEY (C_ID, PAYMENT_ID),
    CONSTRAINT CPPAYMENTFK FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT_DETAILS (PAYMENT_ID) ON DELETE CASCADE,
    CONSTRAINT CPCUSTOMERFK FOREIGN KEY (C_ID) REFERENCES CUSTOMER (C_ID) ON DELETE CASCADE
);

-- SUBSCRIPTION TABLE
CREATE TABLE SUBSCRIPTION (
    SUBSCRIPTION_ID  INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    C_ID             VARCHAR(40),
    START_DATE       DATE NOT NULL,
    END_DATE         DATE NOT NULL,
    PRIMARY KEY ( SUBSCRIPTION_ID ),
    CONSTRAINT SCUSTOMERFK FOREIGN KEY ( C_ID )
        REFERENCES CUSTOMER ( C_ID )
            ON DELETE SET NULL
);

-- BUYER TABLE
CREATE TABLE BUYER (
    BUYER_ID VARCHAR(40),
    PRIMARY KEY ( BUYER_ID ),
    CONSTRAINT BBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES CUSTOMER ( C_ID )
            ON DELETE CASCADE
);

-- SELLER TABLE
CREATE TABLE SELLER (
    SELLER_ID    VARCHAR(40),
    SELLER_TYPE  VARCHAR(200),
    SELLER_NAME VARCHAR(1000),
    PRIMARY KEY ( SELLER_ID ),
    CONSTRAINT SSELLERFK FOREIGN KEY ( SELLER_ID )
        REFERENCES CUSTOMER ( C_ID )
            ON DELETE CASCADE
);

-- REVIEW TABLE
CREATE TABLE REVIEW (
    REVIEW_ID            INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    BUYER_ID             VARCHAR(40),
    R_DESC               VARCHAR(20000) NOT NULL,
    TITLE                VARCHAR(300) NOT NULL,
    RATING               INT CHECK ( RATING BETWEEN 1 AND 5 ),
    SELLER_PRODUCT_FLAG  CHAR(1) CHECK ( SELLER_PRODUCT_FLAG IN ( 'S', 'P' ) ),
    PRIMARY KEY ( REVIEW_ID ),
    CONSTRAINT RBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE SET NULL
);

-- SELLER_REVIEWS TABLE
CREATE TABLE SELLER_REVIEWS (
    SELLER_ID  VARCHAR(40),
    REVIEW_ID  INTEGER,
    PRIMARY KEY ( SELLER_ID,
                  REVIEW_ID ),
    CONSTRAINT SRSELLERFK FOREIGN KEY ( SELLER_ID )
        REFERENCES SELLER ( SELLER_ID )
            ON DELETE CASCADE,
    CONSTRAINT SRREVIEWFK FOREIGN KEY ( REVIEW_ID )
        REFERENCES REVIEW ( REVIEW_ID )
            ON DELETE CASCADE
);

-- REVIEW_IMAGES TABLE
CREATE TABLE REVIEW_IMAGES (
    REVIEW_ID   INTEGER,
    REVIEW_IMG  VARCHAR(200),
    PRIMARY KEY ( REVIEW_ID,
                  REVIEW_IMG ),
    CONSTRAINT RIREVIEWFK FOREIGN KEY ( REVIEW_ID )
        REFERENCES REVIEW ( REVIEW_ID )
            ON DELETE CASCADE
);

-- CATEGORY TABLE
CREATE TABLE CATEGORY (
    CATEGORY_ID  INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    NAME         VARCHAR(30) NOT NULL,
    C_DESC       VARCHAR(20) NOT NULL,
    PRIMARY KEY ( CATEGORY_ID )
);

-- PRODUCT TABLE
CREATE TABLE PRODUCT (
    P_ID         VARCHAR(10) NOT NULL,
    P_NAME       VARCHAR(1000) NOT NULL,
    P_DESC       VARCHAR(5000) NOT NULL,
    PRICE        NUMERIC NOT NULL,
    QTY          INTEGER DEFAULT 0 NOT NULL CHECK ( QTY >= 0 ),
    CATEGORY_ID  INTEGER,
    PRIMARY KEY ( P_ID ),
    CONSTRAINT PCATEGORYFK FOREIGN KEY ( CATEGORY_ID )
        REFERENCES CATEGORY ( CATEGORY_ID )
            ON DELETE SET NULL
);

-- WISHLIST_ITEM TABLE
CREATE TABLE WISHLIST_ITEM (
    PRODUCT_ID  VARCHAR(10),
    BUYER_ID    VARCHAR(40),
    PRIMARY KEY ( PRODUCT_ID,
                  BUYER_ID ),
    CONSTRAINT WIPRODUCTFK FOREIGN KEY ( PRODUCT_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE,
    CONSTRAINT WIBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE CASCADE
);

-- SELLER_PRODUCTS TABLE
CREATE TABLE SELLER_PRODUCTS (
    SELLER_ID  VARCHAR(40),
    P_ID       VARCHAR(10),
    PRIMARY KEY ( SELLER_ID,
                  P_ID ),
    CONSTRAINT SPSELLERFK FOREIGN KEY ( SELLER_ID )
        REFERENCES SELLER ( SELLER_ID )
            ON DELETE CASCADE,
    CONSTRAINT SPPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE
);

-- PRODUCT_REVIEWS TABLE
CREATE TABLE PRODUCT_REVIEWS (
    P_ID       VARCHAR(10),
    REVIEW_ID  INTEGER,
    PRIMARY KEY ( P_ID,
                  REVIEW_ID ),
    CONSTRAINT PRPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE,
    CONSTRAINT PRREVIEWFK FOREIGN KEY ( REVIEW_ID )
        REFERENCES REVIEW ( REVIEW_ID )
            ON DELETE CASCADE
);

-- PRODUCT_IMAGES TABLE
CREATE TABLE PRODUCT_IMAGES (
    P_ID     VARCHAR(10),
    P_IMAGE  VARCHAR(100),
    PRIMARY KEY ( P_ID,
                  P_IMAGE ),
    CONSTRAINT PIPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE
);

-- DAILY_DEALS TABLE
CREATE TABLE DAILY_DEALS (
    P_ID       VARCHAR(10),
    DEAL_DATE  DATE NOT NULL,
    DISCOUNT   NUMERIC NOT NULL,
    PRIMARY KEY ( P_ID,
                  DEAL_DATE ),
    CONSTRAINT DDPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE
);

-- CARRIER TABLE
CREATE TABLE CARRIER (
    CARRIER_ID    INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    CARRIER_NAME  VARCHAR(30) NOT NULL,
    PRIMARY KEY ( CARRIER_ID )
);

-- CART TABLE
CREATE TABLE CART (
    CART_ID      INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    BUYER_ID     VARCHAR(40),
    TOTAL_QTY    INT DEFAULT 0 NOT NULL CHECK ( TOTAL_QTY >= 0 ),
    TOTAL_PRICE  FLOAT DEFAULT 0 NOT NULL,
    PRIMARY KEY ( CART_ID ),
    CONSTRAINT CBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE CASCADE
);

-- CART_ITEMS TABLE
CREATE TABLE CART_ITEMS (
    CART_ID  INTEGER,
    P_ID     VARCHAR(10),
    QTY      INTEGER DEFAULT 1 NOT NULL CHECK ( QTY >= 0 ),
    PRIMARY KEY ( CART_ID,
                  P_ID ),
    CONSTRAINT CICARTFK FOREIGN KEY ( CART_ID )
        REFERENCES CART ( CART_ID )
            ON DELETE CASCADE,
    CONSTRAINT CIPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE
);

-- DISCOUNT TABLE
CREATE TABLE DISCOUNT (
    DISCOUNT_ID    INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    DISCOUNT_NAME  VARCHAR(20) NOT NULL,
    D_DESC         VARCHAR(100) NOT NULL,
    DISCOUNT_AMT   NUMERIC NOT NULL CHECK ( DISCOUNT_AMT >= 0 ),
    PRIMARY KEY ( DISCOUNT_ID )
);

-- ORDERS TABLE
CREATE TABLE ORDERS (
    ORDER_ID     INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    BUYER_ID     VARCHAR(40),
    DISCOUNT_ID  INTEGER,
    PAYMENT_ID   INTEGER,
    ORDER_DATE   DATE NOT NULL,
    PRIMARY KEY ( ORDER_ID ),
    CONSTRAINT OBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE SET NULL,
    CONSTRAINT OPAYMENTFK FOREIGN KEY ( PAYMENT_ID )
        REFERENCES PAYMENT_DETAILS ( PAYMENT_ID )
            ON DELETE SET NULL,
    CONSTRAINT ODISCOUNTFK FOREIGN KEY ( DISCOUNT_ID )
        REFERENCES DISCOUNT ( DISCOUNT_ID )
            ON DELETE SET NULL
);

-- SHIPMENT TABLE
CREATE TABLE SHIPMENT (
    SHIPPING_ID           INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    ORDER_ID              INTEGER,
    P_ID                  VARCHAR(10),
    CARRIER_ID            INTEGER,
    SHIPMENT_TYPE         CHAR(2) DEFAULT 'NP' CHECK ( SHIPMENT_TYPE IN ( 'PP', 'NP' ) ),
    STATUS                VARCHAR(10) NOT NULL,
    EST_DELIVERY_DATE     DATE,
    ACTUAL_DELIVERY_DATE  DATE,
    PRIMARY KEY ( SHIPPING_ID ),
    CONSTRAINT SORDERFK FOREIGN KEY ( ORDER_ID )
        REFERENCES ORDERS ( ORDER_ID )
            ON DELETE SET NULL,
    CONSTRAINT SPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE SET NULL,
    CONSTRAINT SCARRIERFK FOREIGN KEY ( CARRIER_ID )
        REFERENCES CARRIER ( CARRIER_ID )
            ON DELETE SET NULL
);

-- RETURNS TABLE
CREATE TABLE RETURNS (
    RETURN_ID  INTEGER
        GENERATED BY DEFAULT AS IDENTITY,
    BUYER_ID   VARCHAR(40),
    P_ID       VARCHAR(10),
    ORDER_ID   INTEGER,
    PRIMARY KEY ( RETURN_ID ),
    CONSTRAINT RETBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE SET NULL,
    CONSTRAINT RETPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE SET NULL,
    CONSTRAINT RETORDERFK FOREIGN KEY ( ORDER_ID )
        REFERENCES ORDERS ( ORDER_ID )
            ON DELETE SET NULL
);