CREATE TABLE CUSTOMER (
    C_ID   CHAR(15),
    FNAME  VARCHAR(30) NOT NULL,
    LNAME  VARCHAR(30) NOT NULL,
    PHONE  CHAR(10) UNIQUE NOT NULL,
    EMAIL  VARCHAR(60) UNIQUE NOT NULL,
    PWD    VARCHAR(60) NOT NULL,
    PRIMARY KEY ( C_ID )
);

CREATE TABLE SHIPPING_DETAILS (
    ADDRESS_ID      NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    STREET_ADDRESS  VARCHAR(100) NOT NULL,
    CITY            VARCHAR(100) NOT NULL,
    STATE           VARCHAR(100) NOT NULL,
    ZIP             VARCHAR(10) NOT NULL,
    COUNTRY         VARCHAR(60) NOT NULL,
    PHONE           CHAR(10) NOT NULL,
    PRIMARY KEY ( ADDRESS_ID )
);

CREATE TABLE CUSTOMER_SHIPPING (
    ADDRESS_ID  NUMBER,
    C_ID        CHAR(15),
    IS_DEFAULT  CHAR(1) DEFAULT '0' CHECK ( IS_DEFAULT IN ( '0', '1' ) ),
    PRIMARY KEY ( ADDRESS_ID,
                  C_ID ),
    CONSTRAINT CSADDRESSFK FOREIGN KEY ( ADDRESS_ID )
        REFERENCES SHIPPING_DETAILS ( ADDRESS_ID )
            ON DELETE CASCADE,
    CONSTRAINT CSCUSTOMERFK FOREIGN KEY ( C_ID )
        REFERENCES CUSTOMER ( C_ID )
            ON DELETE CASCADE
);

CREATE TABLE PAYMENT_DETAILS (
    PAYMENT_ID       NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CARD_NO          NUMBER NOT NULL,
    CVV              NUMBER NOT NULL,
    EXPIRY_DATE      DATE NOT NULL,
    BILLING_ADDRESS  VARCHAR(500) NOT NULL,
    PRIMARY KEY ( PAYMENT_ID )
);

CREATE TABLE CUSTOMER_PAYMENT (
    PAYMENT_ID  NUMBER,
    C_ID        CHAR(15),
    IS_DEFAULT  CHAR(1) DEFAULT '0' CHECK ( IS_DEFAULT IN ( '0', '1' ) ),
    PRIMARY KEY ( C_ID,
                  PAYMENT_ID ),
    CONSTRAINT CPPAYMENTFK FOREIGN KEY ( PAYMENT_ID )
        REFERENCES PAYMENT_DETAILS ( PAYMENT_ID )
            ON DELETE CASCADE,
    CONSTRAINT CPCUSTOMERFK FOREIGN KEY ( C_ID )
        REFERENCES CUSTOMER ( C_ID )
            ON DELETE CASCADE
);

CREATE TABLE SUBSCRIPTION (
    SUBSCRIPTION_ID  NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    C_ID             CHAR(15),
    START_DATE       DATE NOT NULL,
    END_DATE         DATE NOT NULL,
    PRIMARY KEY ( SUBSCRIPTION_ID ),
    CONSTRAINT SCUSTOMERFK FOREIGN KEY ( C_ID )
        REFERENCES CUSTOMER ( C_ID )
            ON DELETE SET NULL
);

CREATE TABLE BUYER (
    BUYER_ID CHAR(15),
    PRIMARY KEY ( BUYER_ID ),
    CONSTRAINT BBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES CUSTOMER ( C_ID )
            ON DELETE CASCADE
);

CREATE TABLE SELLER (
    SELLER_ID    CHAR(15),
    SELLER_TYPE  VARCHAR(20),
    PRIMARY KEY ( SELLER_ID ),
    CONSTRAINT SSELLERFK FOREIGN KEY ( SELLER_ID )
        REFERENCES CUSTOMER ( C_ID )
            ON DELETE CASCADE
);

CREATE TABLE REVIEW (
    REVIEW_ID            NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    BUYER_ID             CHAR(15),
    R_DESC               VARCHAR(500) NOT NULL,
    TITLE                VARCHAR(30) NOT NULL,
    RATING               INT CHECK ( RATING BETWEEN 1 AND 5 ),
    SELLER_PRODUCT_FLAG  CHAR(1) CHECK ( SELLER_PRODUCT_FLAG IN ( 'S', 'P' ) ),
    PRIMARY KEY ( REVIEW_ID ),
    CONSTRAINT RBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE SET NULL
);

CREATE TABLE SELLER_REVIEWS (
    SELLER_ID  CHAR(15),
    REVIEW_ID  NUMBER,
    PRIMARY KEY ( SELLER_ID,
                  REVIEW_ID ),
    CONSTRAINT SRSELLERFK FOREIGN KEY ( SELLER_ID )
        REFERENCES SELLER ( SELLER_ID )
            ON DELETE CASCADE,
    CONSTRAINT SRREVIEWFK FOREIGN KEY ( REVIEW_ID )
        REFERENCES REVIEW ( REVIEW_ID )
            ON DELETE CASCADE
);

CREATE TABLE REVIEW_IMAGES (
    REVIEW_ID   NUMBER,
    REVIEW_IMG  CHAR(20),
    PRIMARY KEY ( REVIEW_ID,
                  REVIEW_IMG ),
    CONSTRAINT RIREVIEWFK FOREIGN KEY ( REVIEW_ID )
        REFERENCES REVIEW ( REVIEW_ID )
            ON DELETE CASCADE
);

CREATE TABLE CATEGORY (
    CATEGORY_ID  NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    NAME         VARCHAR(15) NOT NULL,
    C_DESC       VARCHAR(20) NOT NULL,
    PRIMARY KEY ( CATEGORY_ID )
);

CREATE TABLE PRODUCT (
    P_ID         NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    P_NAME       VARCHAR(30) NOT NULL,
    P_DESC       VARCHAR(500) NOT NULL,
    PRICE        NUMBER NOT NULL,
    QTY          INT DEFAULT 0 NOT NULL CHECK ( QTY >= 0 ),
    CATEGORY_ID  NUMBER,
    PRIMARY KEY ( P_ID ),
    CONSTRAINT PCATEGORYFK FOREIGN KEY ( CATEGORY_ID )
        REFERENCES CATEGORY ( CATEGORY_ID )
            ON DELETE SET NULL
);

CREATE TABLE WISHLIST_ITEM (
    PRODUCT_ID  NUMBER,
    BUYER_ID    CHAR(15),
    PRIMARY KEY ( PRODUCT_ID,
                  BUYER_ID ),
    CONSTRAINT WIPRODUCTFK FOREIGN KEY ( PRODUCT_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE,
    CONSTRAINT WIBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE CASCADE
);

CREATE TABLE SELLER_PRODUCTS (
    SELLER_ID  CHAR(15),
    P_ID       NUMBER,
    PRIMARY KEY ( SELLER_ID,
                  P_ID ),
    CONSTRAINT SPSELLERFK FOREIGN KEY ( SELLER_ID )
        REFERENCES SELLER ( SELLER_ID )
            ON DELETE CASCADE,
    CONSTRAINT SPPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE
);

CREATE TABLE PRODUCT_REVIEWS (
    P_ID       NUMBER,
    REVIEW_ID  NUMBER,
    PRIMARY KEY ( P_ID,
                  REVIEW_ID ),
    CONSTRAINT PRPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE,
    CONSTRAINT PRREVIEWFK FOREIGN KEY ( REVIEW_ID )
        REFERENCES REVIEW ( REVIEW_ID )
            ON DELETE CASCADE
);

CREATE TABLE PRODUCT_IMAGES (
    P_ID     NUMBER,
    P_IMAGE  CHAR(20),
    PRIMARY KEY ( P_ID,
                  P_IMAGE ),
    CONSTRAINT PIPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE
);

CREATE TABLE DAILY_DEALS (
    P_ID       NUMBER,
    DEAL_DATE  DATE NOT NULL,
    DISCOUNT   NUMBER NOT NULL,
    PRIMARY KEY ( P_ID,
                  DEAL_DATE ),
    CONSTRAINT DDPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE
);

CREATE TABLE CARRIER (
    CARRIER_ID    NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CARRIER_NAME  VARCHAR(15) NOT NULL,
    PRIMARY KEY ( CARRIER_ID )
);

CREATE TABLE CART (
    CART_ID      NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    BUYER_ID     CHAR(15),
    TOTAL_QTY    INT DEFAULT 0 NOT NULL CHECK ( TOTAL_QTY >= 0 ),
    TOTAL_PRICE  NUMBER DEFAULT 0 NOT NULL,
    PRIMARY KEY ( CART_ID ),
    CONSTRAINT CBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE CASCADE
);

CREATE TABLE CART_ITEMS (
    CART_ID  NUMBER,
    P_ID     NUMBER,
    QTY      INT DEFAULT 1 NOT NULL CHECK ( QTY >= 0 ),
    PRIMARY KEY ( CART_ID,
                  P_ID ),
    CONSTRAINT CICARTFK FOREIGN KEY ( CART_ID )
        REFERENCES CART ( CART_ID )
            ON DELETE CASCADE,
    CONSTRAINT CIPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE CASCADE
);

CREATE TABLE DISCOUNT (
    DISCOUNT_ID    NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    DISCOUNT_NAME  VARCHAR(20) NOT NULL,
    D_DESC         VARCHAR(100) NOT NULL,
    DISCOUNT_AMT   NUMBER NOT NULL CHECK ( DISCOUNT_AMT >= 0 ),
    PRIMARY KEY ( DISCOUNT_ID )
);

CREATE TABLE ORDERS (
    ORDER_ID     NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    BUYER_ID     CHAR(15),
    DISCOUNT_ID  NUMBER,
    PAYMENT_ID   NUMBER,
    ORDER_DATE   DATE NOT NULL,
    PRIMARY KEY ( ORDER_ID ),
    CONSTRAINT OBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE SET NULL,
    CONSTRAINT OPAYMENTFK FOREIGN KEY ( PAYMENT_ID )
        REFERENCES PAYMENT_DETAILS ( PAYMENT_ID )
            ON DELETE SET NULL,
    CONSTRAINT ODISCOUNTFK FOREIGN KEY ( DISCOUNT_ID )
        REFERENCES DISCOUNT ( DISCOUNT_ID )
            ON DELETE SET NULL
);

CREATE TABLE SHIPMENT (
    SHIPPING_ID           NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ORDER_ID              NUMBER,
    P_ID                  NUMBER,
    CARRIER_ID            NUMBER,
    SHIPMENT_TYPE         CHAR(2) DEFAULT 'NP' CHECK ( SHIPMENT_TYPE IN ( 'PP', 'NP' ) ),
    STATUS                VARCHAR(10) NOT NULL,
    EST_DELIVERY_DATE     DATE,
    ACTUAL_DELIVERY_DATE  DATE,
    PRIMARY KEY ( SHIPPING_ID ),
    CONSTRAINT SORDERFK FOREIGN KEY ( ORDER_ID )
        REFERENCES ORDERS ( ORDER_ID )
            ON DELETE SET NULL,
    CONSTRAINT SPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE SET NULL,
    CONSTRAINT SCARRIERFK FOREIGN KEY ( CARRIER_ID )
        REFERENCES CARRIER ( CARRIER_ID )
            ON DELETE SET NULL
);

CREATE TABLE RETURNS (
    RETURN_ID  NUMBER
        GENERATED BY DEFAULT ON NULL AS IDENTITY,
    BUYER_ID   CHAR(15),
    P_ID       NUMBER,
    ORDER_ID   NUMBER,
    PRIMARY KEY ( RETURN_ID ),
    CONSTRAINT RETBUYERFK FOREIGN KEY ( BUYER_ID )
        REFERENCES BUYER ( BUYER_ID )
            ON DELETE SET NULL,
    CONSTRAINT RETPRODUCTFK FOREIGN KEY ( P_ID )
        REFERENCES PRODUCT ( P_ID )
            ON DELETE SET NULL,
    CONSTRAINT RETORDERFK FOREIGN KEY ( ORDER_ID )
        REFERENCES ORDERS ( ORDER_ID )
            ON DELETE SET NULL
);